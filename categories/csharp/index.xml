<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSharp on PixelYard</title><link>/categories/csharp/</link><description>Recent content in CSharp on PixelYard</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 15 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="/categories/csharp/index.xml" rel="self" type="application/rss+xml"/><item><title>Corouter</title><link>/posts/corouter/</link><pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate><guid>/posts/corouter/</guid><description>If you are looking for a full implementation with some nice add-ons like a fluent API (similar to reactive programming), take a look at my repository : Corouter.
A few people really understand Unity coroutines, and for good reasons. To clear things out first : unity coroutines are not running on another thread, it&amp;rsquo;s just a simple way to delay calls to functions.
To do that, they use the C# IEnumerator combined with the &amp;ldquo;yield return&amp;rdquo; language keyword.</description></item></channel></rss>